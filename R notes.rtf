{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Subsetting\
	== searches column for vector in order and recycles\
	%in% searches column for any in vector\
		to subset by column name\
			DF[,colnames(DF) %in% c(\'93COLNAME\'94,\'94COLNAME\'94]\
		to subset by columns with multiple inputs\
			DF[,sapply(DF, function(col) length(unique(col)))>1]		\
\
gsub\
	grep and replace\
\
for tax dataframe, instead of continuing loop all the way to the top level, could include 
\b \ul while
\b0 \ulnone  \
	with 
\b \ul while
\b0 \ulnone  we can have it loop only until no more \'91unclassified\'92 are present\
\
q - to exit less\
\
Loading packages\
	require tries to attach a package and is a logic - T/F\
\
if(!require(PACKAGE)) install.packages(\'93PACKAGE\'94)\
library(PACKAGE)\
\
or if only using one or two functions from package\
PACKAGE :: FUNCTION\'92\
\
RMD\
echo=F - hide R code\
messages=F\
warnings=F\
\
Linear regression\
\
squared error\
	y=slope*x+y-intercept\
	Error equals Yn - (slope*Xn+yintercept)\
	squared error = (Y - (slope*X+yintercept))^2 + \'85 + (Yn - (slope*Xn+yintercept))^2\
mean of squared residuals}